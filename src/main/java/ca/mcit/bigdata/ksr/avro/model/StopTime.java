/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ca.mcit.bigdata.ksr.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StopTime extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 667808581305983429L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StopTime\",\"namespace\":\"ca.mcit.bigdata.ksr.avro.model\",\"fields\":[{\"name\":\"trip_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"arrival_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"departure_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stop_id\",\"type\":\"long\"},{\"name\":\"stop_sequence\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StopTime> ENCODER =
      new BinaryMessageEncoder<StopTime>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StopTime> DECODER =
      new BinaryMessageDecoder<StopTime>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StopTime> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StopTime> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StopTime>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StopTime to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StopTime from a ByteBuffer. */
  public static StopTime fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String trip_id;
  @Deprecated public java.lang.String arrival_time;
  @Deprecated public java.lang.String departure_time;
  @Deprecated public long stop_id;
  @Deprecated public int stop_sequence;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StopTime() {}

  /**
   * All-args constructor.
   * @param trip_id The new value for trip_id
   * @param arrival_time The new value for arrival_time
   * @param departure_time The new value for departure_time
   * @param stop_id The new value for stop_id
   * @param stop_sequence The new value for stop_sequence
   */
  public StopTime(java.lang.String trip_id, java.lang.String arrival_time, java.lang.String departure_time, java.lang.Long stop_id, java.lang.Integer stop_sequence) {
    this.trip_id = trip_id;
    this.arrival_time = arrival_time;
    this.departure_time = departure_time;
    this.stop_id = stop_id;
    this.stop_sequence = stop_sequence;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return trip_id;
    case 1: return arrival_time;
    case 2: return departure_time;
    case 3: return stop_id;
    case 4: return stop_sequence;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: trip_id = (java.lang.String)value$; break;
    case 1: arrival_time = (java.lang.String)value$; break;
    case 2: departure_time = (java.lang.String)value$; break;
    case 3: stop_id = (java.lang.Long)value$; break;
    case 4: stop_sequence = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'trip_id' field.
   * @return The value of the 'trip_id' field.
   */
  public java.lang.String getTripId() {
    return trip_id;
  }

  /**
   * Sets the value of the 'trip_id' field.
   * @param value the value to set.
   */
  public void setTripId(java.lang.String value) {
    this.trip_id = value;
  }

  /**
   * Gets the value of the 'arrival_time' field.
   * @return The value of the 'arrival_time' field.
   */
  public java.lang.String getArrivalTime() {
    return arrival_time;
  }

  /**
   * Sets the value of the 'arrival_time' field.
   * @param value the value to set.
   */
  public void setArrivalTime(java.lang.String value) {
    this.arrival_time = value;
  }

  /**
   * Gets the value of the 'departure_time' field.
   * @return The value of the 'departure_time' field.
   */
  public java.lang.String getDepartureTime() {
    return departure_time;
  }

  /**
   * Sets the value of the 'departure_time' field.
   * @param value the value to set.
   */
  public void setDepartureTime(java.lang.String value) {
    this.departure_time = value;
  }

  /**
   * Gets the value of the 'stop_id' field.
   * @return The value of the 'stop_id' field.
   */
  public java.lang.Long getStopId() {
    return stop_id;
  }

  /**
   * Sets the value of the 'stop_id' field.
   * @param value the value to set.
   */
  public void setStopId(java.lang.Long value) {
    this.stop_id = value;
  }

  /**
   * Gets the value of the 'stop_sequence' field.
   * @return The value of the 'stop_sequence' field.
   */
  public java.lang.Integer getStopSequence() {
    return stop_sequence;
  }

  /**
   * Sets the value of the 'stop_sequence' field.
   * @param value the value to set.
   */
  public void setStopSequence(java.lang.Integer value) {
    this.stop_sequence = value;
  }

  /**
   * Creates a new StopTime RecordBuilder.
   * @return A new StopTime RecordBuilder
   */
  public static ca.mcit.bigdata.ksr.avro.model.StopTime.Builder newBuilder() {
    return new ca.mcit.bigdata.ksr.avro.model.StopTime.Builder();
  }

  /**
   * Creates a new StopTime RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StopTime RecordBuilder
   */
  public static ca.mcit.bigdata.ksr.avro.model.StopTime.Builder newBuilder(ca.mcit.bigdata.ksr.avro.model.StopTime.Builder other) {
    return new ca.mcit.bigdata.ksr.avro.model.StopTime.Builder(other);
  }

  /**
   * Creates a new StopTime RecordBuilder by copying an existing StopTime instance.
   * @param other The existing instance to copy.
   * @return A new StopTime RecordBuilder
   */
  public static ca.mcit.bigdata.ksr.avro.model.StopTime.Builder newBuilder(ca.mcit.bigdata.ksr.avro.model.StopTime other) {
    return new ca.mcit.bigdata.ksr.avro.model.StopTime.Builder(other);
  }

  /**
   * RecordBuilder for StopTime instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StopTime>
    implements org.apache.avro.data.RecordBuilder<StopTime> {

    private java.lang.String trip_id;
    private java.lang.String arrival_time;
    private java.lang.String departure_time;
    private long stop_id;
    private int stop_sequence;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ca.mcit.bigdata.ksr.avro.model.StopTime.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.trip_id)) {
        this.trip_id = data().deepCopy(fields()[0].schema(), other.trip_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.arrival_time)) {
        this.arrival_time = data().deepCopy(fields()[1].schema(), other.arrival_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.departure_time)) {
        this.departure_time = data().deepCopy(fields()[2].schema(), other.departure_time);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stop_id)) {
        this.stop_id = data().deepCopy(fields()[3].schema(), other.stop_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stop_sequence)) {
        this.stop_sequence = data().deepCopy(fields()[4].schema(), other.stop_sequence);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StopTime instance
     * @param other The existing instance to copy.
     */
    private Builder(ca.mcit.bigdata.ksr.avro.model.StopTime other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.trip_id)) {
        this.trip_id = data().deepCopy(fields()[0].schema(), other.trip_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.arrival_time)) {
        this.arrival_time = data().deepCopy(fields()[1].schema(), other.arrival_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.departure_time)) {
        this.departure_time = data().deepCopy(fields()[2].schema(), other.departure_time);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stop_id)) {
        this.stop_id = data().deepCopy(fields()[3].schema(), other.stop_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stop_sequence)) {
        this.stop_sequence = data().deepCopy(fields()[4].schema(), other.stop_sequence);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'trip_id' field.
      * @return The value.
      */
    public java.lang.String getTripId() {
      return trip_id;
    }

    /**
      * Sets the value of the 'trip_id' field.
      * @param value The value of 'trip_id'.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder setTripId(java.lang.String value) {
      validate(fields()[0], value);
      this.trip_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'trip_id' field has been set.
      * @return True if the 'trip_id' field has been set, false otherwise.
      */
    public boolean hasTripId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'trip_id' field.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder clearTripId() {
      trip_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrival_time' field.
      * @return The value.
      */
    public java.lang.String getArrivalTime() {
      return arrival_time;
    }

    /**
      * Sets the value of the 'arrival_time' field.
      * @param value The value of 'arrival_time'.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder setArrivalTime(java.lang.String value) {
      validate(fields()[1], value);
      this.arrival_time = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'arrival_time' field has been set.
      * @return True if the 'arrival_time' field has been set, false otherwise.
      */
    public boolean hasArrivalTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'arrival_time' field.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder clearArrivalTime() {
      arrival_time = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'departure_time' field.
      * @return The value.
      */
    public java.lang.String getDepartureTime() {
      return departure_time;
    }

    /**
      * Sets the value of the 'departure_time' field.
      * @param value The value of 'departure_time'.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder setDepartureTime(java.lang.String value) {
      validate(fields()[2], value);
      this.departure_time = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'departure_time' field has been set.
      * @return True if the 'departure_time' field has been set, false otherwise.
      */
    public boolean hasDepartureTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'departure_time' field.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder clearDepartureTime() {
      departure_time = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'stop_id' field.
      * @return The value.
      */
    public java.lang.Long getStopId() {
      return stop_id;
    }

    /**
      * Sets the value of the 'stop_id' field.
      * @param value The value of 'stop_id'.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder setStopId(long value) {
      validate(fields()[3], value);
      this.stop_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'stop_id' field has been set.
      * @return True if the 'stop_id' field has been set, false otherwise.
      */
    public boolean hasStopId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'stop_id' field.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder clearStopId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'stop_sequence' field.
      * @return The value.
      */
    public java.lang.Integer getStopSequence() {
      return stop_sequence;
    }

    /**
      * Sets the value of the 'stop_sequence' field.
      * @param value The value of 'stop_sequence'.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder setStopSequence(int value) {
      validate(fields()[4], value);
      this.stop_sequence = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'stop_sequence' field has been set.
      * @return True if the 'stop_sequence' field has been set, false otherwise.
      */
    public boolean hasStopSequence() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'stop_sequence' field.
      * @return This builder.
      */
    public ca.mcit.bigdata.ksr.avro.model.StopTime.Builder clearStopSequence() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StopTime build() {
      try {
        StopTime record = new StopTime();
        record.trip_id = fieldSetFlags()[0] ? this.trip_id : (java.lang.String) defaultValue(fields()[0]);
        record.arrival_time = fieldSetFlags()[1] ? this.arrival_time : (java.lang.String) defaultValue(fields()[1]);
        record.departure_time = fieldSetFlags()[2] ? this.departure_time : (java.lang.String) defaultValue(fields()[2]);
        record.stop_id = fieldSetFlags()[3] ? this.stop_id : (java.lang.Long) defaultValue(fields()[3]);
        record.stop_sequence = fieldSetFlags()[4] ? this.stop_sequence : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StopTime>
    WRITER$ = (org.apache.avro.io.DatumWriter<StopTime>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StopTime>
    READER$ = (org.apache.avro.io.DatumReader<StopTime>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
